# Generated by Django 2.1.5 on 2019-01-13 09:46

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=25, unique=True)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('first_name', models.CharField(max_length=255, null=True)),
                ('last_name', models.CharField(max_length=255, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=255, null=True)),
                ('birth_date', models.DateField(blank=True, max_length=255, null=True, verbose_name='Birth Day')),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female')], default='male', max_length=25, null=True)),
                ('address', models.CharField(blank=True, default='', max_length=255)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='user/profile/photo/%Y/%m/%d/')),
                ('phone_number', models.CharField(blank=True, default='', help_text='Please use the format: +63-XXX-XXXX-XXX', max_length=20, validators=[django.core.validators.RegexValidator(message='Format: +63-999-9999-999', regex='^\\+63-\\d{3}\\-\\d{4}\\-\\d{3}$')])),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('is_student', models.BooleanField(default=False, editable=False, verbose_name='Student')),
                ('is_faculty', models.BooleanField(default=False, editable=False, verbose_name='Faculty')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Staff')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Superuser')),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-date_joined'],
            },
        ),
        migrations.CreateModel(
            name='CurrentState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.CharField(choices=[('First Semester', 'First Semester'), ('Second Semester', 'Second Semester'), ('Summer Semester', 'Summer Semester')], default='First Semester', max_length=25)),
                ('school_year', models.CharField(choices=[('2010-2011', '2010-2011'), ('2011-2012', '2011-2012'), ('2012-2013', '2012-2013'), ('2013-2014', '2013-2014'), ('2014-2015', '2014-2015'), ('2015-2016', '2015-2016'), ('2016-2017', '2016-2017'), ('2017-2018', '2017-2018'), ('2018-2019', '2018-2019'), ('2019-2020', '2019-2020'), ('2020-2021', '2020-2021'), ('2021-2022', '2021-2022'), ('2022-2023', '2022-2023'), ('2023-2024', '2023-2024'), ('2024-2025', '2024-2025'), ('2025-2026', '2025-2026'), ('2026-2027', '2026-2027'), ('2027-2028', '2027-2028'), ('2028-2029', '2028-2029'), ('2029-2030', '2029-2030'), ('2030-2031', '2030-2031'), ('2031-2032', '2031-2032'), ('2032-2033', '2032-2033'), ('2033-2034', '2033-2034')], default='2019-2020', max_length=25)),
                ('is_enrollment', models.BooleanField(default=False, verbose_name='Enrollment Season?')),
            ],
            options={
                'verbose_name_plural': 'CURRENT STATE',
            },
        ),
        migrations.CreateModel(
            name='FacultyProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(blank=True, choices=[('Department of Civil Engineering', 'Department of Civil Engineering'), ('Department of Computer Engineering', 'Department of Computer Engineering'), ('Department of Electronics and Communications Engineering', 'Department of Electronics and Communications Engineering'), ('Department of Electrical Engineering', 'Department of Electrical Engineering'), ('Department of Industrial Engineering', 'Department of Industrial Engineering'), ('Department of Mechanical Engineering', 'Department of Mechanical Engineering')], max_length=255, null=True)),
                ('civil_status', models.CharField(choices=[('single', 'Single'), ('married', 'Married')], default='single', max_length=25)),
                ('spouse', models.CharField(blank=True, default='N/A', help_text='If Applicable', max_length=50, null=True)),
                ('school_graduated', models.CharField(blank=True, max_length=255, null=True)),
                ('major', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, choices=[('Full Time', 'Full Time'), ('Part Time', 'Part Time')], default='Full Time', max_length=25, null=True)),
                ('is_chairperson', models.BooleanField(default=False, verbose_name='Chairperson?')),
                ('additional_information', models.TextField(blank=True, null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='faculty_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Faculty Profile',
            },
        ),
        migrations.CreateModel(
            name='StaffProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('civil_status', models.CharField(choices=[('single', 'Single'), ('married', 'Married')], default='single', max_length=25)),
                ('spouse', models.CharField(blank=True, default='N/A', help_text='If Applicable', max_length=50, null=True)),
                ('additional_information', models.TextField(blank=True, null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='staff_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Staff Profile',
            },
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.CharField(blank=True, choices=[('BSCE', 'BSCE'), ('BSCOE', 'BSCOE'), ('BSECE', 'BSECE'), ('BSEE', 'BSEE'), ('BSIE', 'BSIE'), ('BSME', 'BSME')], default='BSIE', max_length=25, null=True)),
                ('course_description', models.CharField(blank=True, choices=[('Bachelor of Science in Civil Engineering', 'Bachelor of Science in Civil Engineering'), ('Bachelor of Science in Computer Engineering', 'Bachelor of Science in Computer Engineering'), ('Bachelor of Science in Electronics and Communications Engineering', 'Bachelor of Science in Electronics and Communications Engineering'), ('Bachelor of Science in Electrical Engineering', 'Bachelor of Science in Electrical Engineering'), ('Bachelor of Science in Industrial Engineering', 'Bachelor of Science in Industrial Engineering'), ('Bachelor of Science in Mechanical Engineering', 'Bachelor of Science in Mechanical Engineering')], default='Bachelor of Science in Industrial Engineering', max_length=100, null=True)),
                ('status', models.CharField(choices=[('Regular', 'Regular'), ('Irregular', 'Irregular')], default='Regular', max_length=25)),
                ('guardian', models.CharField(blank=True, max_length=50)),
                ('additional_information', models.TextField(blank=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Student Profile',
            },
        ),
        migrations.CreateModel(
            name='Year',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.CharField(choices=[('BSCE', 'BSCE'), ('BSCOE', 'BSCOE'), ('BSECE', 'BSECE'), ('BSEE', 'BSEE'), ('BSIE', 'BSIE'), ('BSME', 'BSME')], default='BSIE', max_length=25)),
                ('year', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], default='1', max_length=10)),
            ],
            options={
                'verbose_name_plural': 'Year',
            },
        ),
        migrations.CreateModel(
            name='YearAndSection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.CharField(max_length=10)),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='sections', to='account.Year')),
            ],
            options={
                'verbose_name_plural': 'Year and Section',
            },
        ),
        migrations.AlterUniqueTogether(
            name='year',
            unique_together={('course', 'year')},
        ),
        migrations.AddField(
            model_name='studentprofile',
            name='year_and_section',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='students', to='account.YearAndSection'),
        ),
        migrations.AlterUniqueTogether(
            name='yearandsection',
            unique_together={('section', 'year')},
        ),
    ]
